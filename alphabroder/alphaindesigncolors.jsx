let
    Source = Excel.CurrentWorkbook(){[Name="handoffdata"]}[Content],
    SKUTOPG = Excel.CurrentWorkbook(){[Name="skutopage"]}[Content],
    SWATCHES = Excel.CurrentWorkbook(){[Name="Swatches"]}[Content],
    swatchloop = let swatchlookup = (c,idx) => 
    if c = null then null else 
    let rows = Table.SelectRows(SwatchesCap, each [Item Colors] = c),
        seperator = List.First(Table.Column(rows,"Seperator")),
        colors = List.First(Table.Column(rows,"Swatch ID"))
    in colors
  in swatchlookup,
    SwatchesCap = Table.TransformColumns(SWATCHES,{{"Item Colors", Text.Proper, type text}}),
    #"Sorted Rows1" = Table.Sort(SwatchesCap,{{"Item Colors", Order.Ascending}}),
    #"Changed Type1" = Table.TransformColumnTypes(SKUTOPG,{{"SKU", type text}}),
    #"Trimmed Text" = Table.TransformColumns(#"Changed Type1",{{"SKU", Text.Trim, type text}}),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Item #", type text}, {"Name", type text}, {"FOB", type text}, {"Rush", type text}, {"Category", type text}, {"Product Data", type text}, {"Item Colors", type text}, {"Material", type text}, {"Country of Origin", type text}, {"Decoration Methods", type text}, {"Max Decoration colors", type any}, {"Item Dimensions", type text}, {"Std. Imprint Area ", type text}, {"Imprint Size", type text}, {"Alt. Imprint Area", type text}, {"Alt Imprint Size", type text}, {"Packaging", type text}, {"Weight Per 100 Units (Wt./100)", type number}, {"ShipQty1", Int64.Type}, {"ShipWeight1", type number}, {"ShipLength1", type number}, {"ShipWidth1", type number}, {"ShipHeight1", type number}, {"Setup Coded Standard Imprint Methods (As Denoted in Bold)", type number}, {"Setup margin/price code all qty", type text}, {"Running Charge Addl Color coded (all Quantities)", type number}, {"running charge addl Color margin/price code all qty", type text}, {"Running Charge Addl location coded (all Quantities)", type number}, {"running charge addl location margin/price code all qty", type text}, {"qty1", Int64.Type}, {"qty2", Int64.Type}, {"qty3", Int64.Type}, {"qty4", Int64.Type}, {"qty5", Int64.Type}, {"qty1price coded", type number}, {"qty2price coded", type number}, {"qty3price coded", type number}, {"qty4price coded", type number}, {"qty5price coded", type number}, {"DISCOUNT CODE", type text}, {"NETPRICE1", type number}, {"NETPRICE2", type number}, {"NETPRICE3", type number}, {"NETPRICE4", type number}, {"NETPRICE5", type number}, {"GROSSPRICE_CAD1", type any}, {"GROSSPRICE_CAD2", type number}, {"GROSSPRICE_CAD22", type number}, {"GROSSPRICE_CAD4", type number}, {"GROSSPRICE_CAD5", type number}, {"DISCOUNT CODE3", type text}, {"NETPRICE_CAD1", type number}, {"NETPRICE_CAD2", type number}, {"NETPRICE_CAD3", type number}, {"NETPRICE_CAD4", type number}, {"NETPRICE_CAD5", type number}, {"New", type text}, {"New Colors", type text}, {"Prime+", type text}, {"Prime Exclusive", type text}, {"Prime Design", type text}, {"Brand and Collection Logo", type text}, {"SOURCE", type text}}),
    #"Trimmed Text1" = Table.TransformColumns(#"Changed Type",{{"Item #", Text.Trim, type text}}),
    #"Reordered Columns" = Table.ReorderColumns(#"Trimmed Text1",{"Brand and Collection Logo", "Item #", "Name", "New", "Prime+", "Prime Exclusive", "Prime Design", "FOB", "Rush", "Category", "Product Data", "Item Colors", "Material", "Country of Origin", "Decoration Methods", "Max Decoration colors", "Item Dimensions", "Std. Imprint Area ", "Imprint Size", "Alt. Imprint Area", "Alt Imprint Size", "Packaging", "Weight Per 100 Units (Wt./100)", "ShipQty1", "ShipWeight1", "ShipLength1", "ShipWidth1", "ShipHeight1", "Setup Coded Standard Imprint Methods (As Denoted in Bold)", "Setup margin/price code all qty", "Running Charge Addl Color coded (all Quantities)", "running charge addl Color margin/price code all qty", "Running Charge Addl location coded (all Quantities)", "running charge addl location margin/price code all qty", "qty1", "qty2", "qty3", "qty4", "qty5", "qty1price coded", "qty2price coded", "qty3price coded", "qty4price coded", "qty5price coded", "DISCOUNT CODE", "NETPRICE1", "NETPRICE2", "NETPRICE3", "NETPRICE4", "NETPRICE5", "GROSSPRICE_CAD1", "GROSSPRICE_CAD2", "GROSSPRICE_CAD22", "GROSSPRICE_CAD4", "GROSSPRICE_CAD5", "DISCOUNT CODE3", "NETPRICE_CAD1", "NETPRICE_CAD2", "NETPRICE_CAD3", "NETPRICE_CAD4", "NETPRICE_CAD5", "New Colors", "SOURCE"}),
    #"Renamed Columns" = Table.RenameColumns(#"Reordered Columns",{{"Brand and Collection Logo", "brand"}, {"Item #", "itemnumber"}, {"Name", "description"}}),
    #"Reordered Columns1" = Table.ReorderColumns(#"Renamed Columns",{"brand", "itemnumber", "description", "Category", "New", "Prime+", "Prime Exclusive", "Prime Design", "FOB", "Rush", "Product Data", "Item Colors", "Material", "Country of Origin", "Decoration Methods", "Max Decoration colors", "Item Dimensions", "Std. Imprint Area ", "Imprint Size", "Alt. Imprint Area", "Alt Imprint Size", "Packaging", "Weight Per 100 Units (Wt./100)", "ShipQty1", "ShipWeight1", "ShipLength1", "ShipWidth1", "ShipHeight1", "Setup Coded Standard Imprint Methods (As Denoted in Bold)", "Setup margin/price code all qty", "Running Charge Addl Color coded (all Quantities)", "running charge addl Color margin/price code all qty", "Running Charge Addl location coded (all Quantities)", "running charge addl location margin/price code all qty", "qty1", "qty2", "qty3", "qty4", "qty5", "qty1price coded", "qty2price coded", "qty3price coded", "qty4price coded", "qty5price coded", "DISCOUNT CODE", "NETPRICE1", "NETPRICE2", "NETPRICE3", "NETPRICE4", "NETPRICE5", "GROSSPRICE_CAD1", "GROSSPRICE_CAD2", "GROSSPRICE_CAD22", "GROSSPRICE_CAD4", "GROSSPRICE_CAD5", "DISCOUNT CODE3", "NETPRICE_CAD1", "NETPRICE_CAD2", "NETPRICE_CAD3", "NETPRICE_CAD4", "NETPRICE_CAD5", "New Colors", "SOURCE"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Reordered Columns1",{{"Category", "category"}}),
    #"Reordered Columns2" = Table.ReorderColumns(#"Renamed Columns1",{"brand", "itemnumber", "category", "description", "New", "Prime+", "Prime Exclusive", "Prime Design", "FOB", "Rush", "Product Data", "Item Colors", "Material", "Country of Origin", "Decoration Methods", "Max Decoration colors", "Item Dimensions", "Std. Imprint Area ", "Imprint Size", "Alt. Imprint Area", "Alt Imprint Size", "Packaging", "Weight Per 100 Units (Wt./100)", "ShipQty1", "ShipWeight1", "ShipLength1", "ShipWidth1", "ShipHeight1", "Setup Coded Standard Imprint Methods (As Denoted in Bold)", "Setup margin/price code all qty", "Running Charge Addl Color coded (all Quantities)", "running charge addl Color margin/price code all qty", "Running Charge Addl location coded (all Quantities)", "running charge addl location margin/price code all qty", "qty1", "qty2", "qty3", "qty4", "qty5", "qty1price coded", "qty2price coded", "qty3price coded", "qty4price coded", "qty5price coded", "DISCOUNT CODE", "NETPRICE1", "NETPRICE2", "NETPRICE3", "NETPRICE4", "NETPRICE5", "GROSSPRICE_CAD1", "GROSSPRICE_CAD2", "GROSSPRICE_CAD22", "GROSSPRICE_CAD4", "GROSSPRICE_CAD5", "DISCOUNT CODE3", "NETPRICE_CAD1", "NETPRICE_CAD2", "NETPRICE_CAD3", "NETPRICE_CAD4", "NETPRICE_CAD5", "New Colors", "SOURCE"}),
    #"Renamed Columns2" = Table.RenameColumns(#"Reordered Columns2",{{"New", "usstatus"}}),
    #"Uppercased Text" = Table.TransformColumns(#"Renamed Columns2",{{"usstatus", Text.Upper, type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Uppercased Text","YES","New",Replacer.ReplaceText,{"usstatus"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","NO","",Replacer.ReplaceText,{"usstatus"}),
    #"Removed Columns" = Table.RemoveColumns(#"Replaced Value1",{"FOB", "Rush"}),
    #"Renamed Columns3" = Table.RenameColumns(#"Removed Columns",{{"Product Data", "attributes"}, {"Item Colors", "colorgrouping"}}),
    #"Reordered Columns3" = Table.ReorderColumns(#"Renamed Columns3",{"brand", "itemnumber", "category", "usstatus", "Prime+", "Prime Exclusive", "Prime Design", "description", "attributes", "colorgrouping", "Material", "Country of Origin", "Decoration Methods", "Max Decoration colors", "Item Dimensions", "Std. Imprint Area ", "Imprint Size", "Alt. Imprint Area", "Alt Imprint Size", "Packaging", "Weight Per 100 Units (Wt./100)", "ShipQty1", "ShipWeight1", "ShipLength1", "ShipWidth1", "ShipHeight1", "Setup Coded Standard Imprint Methods (As Denoted in Bold)", "Setup margin/price code all qty", "Running Charge Addl Color coded (all Quantities)", "running charge addl Color margin/price code all qty", "Running Charge Addl location coded (all Quantities)", "running charge addl location margin/price code all qty", "qty1", "qty2", "qty3", "qty4", "qty5", "qty1price coded", "qty2price coded", "qty3price coded", "qty4price coded", "qty5price coded", "DISCOUNT CODE", "NETPRICE1", "NETPRICE2", "NETPRICE3", "NETPRICE4", "NETPRICE5", "GROSSPRICE_CAD1", "GROSSPRICE_CAD2", "GROSSPRICE_CAD22", "GROSSPRICE_CAD4", "GROSSPRICE_CAD5", "DISCOUNT CODE3", "NETPRICE_CAD1", "NETPRICE_CAD2", "NETPRICE_CAD3", "NETPRICE_CAD4", "NETPRICE_CAD5", "New Colors", "SOURCE"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Reordered Columns3",{"Material", "Country of Origin"}),
    #"Renamed Columns4" = Table.RenameColumns(#"Removed Columns1",{{"Prime+", "primeplus"}}),
    #"Renamed Columns5" = Table.RenameColumns(#"Renamed Columns4",{{"Decoration Methods", "decorationmethod"}}),
    #"Removed Columns2" = Table.RemoveColumns(#"Renamed Columns5",{"Max Decoration colors"}),
    #"Renamed Columns6" = Table.RenameColumns(#"Removed Columns2",{{"Std. Imprint Area ", "imprintarea"}, {"Imprint Size", "imprintsize"}, {"Alt. Imprint Area", "altimprintarea"}, {"Alt Imprint Size", "altimprintsize"}, {"Item Dimensions", "size"}, {"Prime Exclusive", "exclusive"}, {"Prime Design", "primedesign"}}),
    #"Reordered Columns4" = Table.ReorderColumns(#"Renamed Columns6",{"brand", "itemnumber", "category", "usstatus", "primeplus", "New Colors", "SOURCE", "exclusive", "primedesign", "description", "attributes", "colorgrouping", "decorationmethod", "size", "imprintarea", "imprintsize", "altimprintarea", "altimprintsize", "Packaging", "Weight Per 100 Units (Wt./100)", "ShipQty1", "ShipWeight1", "ShipLength1", "ShipWidth1", "ShipHeight1", "Setup Coded Standard Imprint Methods (As Denoted in Bold)", "Setup margin/price code all qty", "Running Charge Addl Color coded (all Quantities)", "running charge addl Color margin/price code all qty", "Running Charge Addl location coded (all Quantities)", "running charge addl location margin/price code all qty", "qty1", "qty2", "qty3", "qty4", "qty5", "qty1price coded", "qty2price coded", "qty3price coded", "qty4price coded", "qty5price coded", "DISCOUNT CODE", "NETPRICE1", "NETPRICE2", "NETPRICE3", "NETPRICE4", "NETPRICE5", "GROSSPRICE_CAD1", "GROSSPRICE_CAD2", "GROSSPRICE_CAD22", "GROSSPRICE_CAD4", "GROSSPRICE_CAD5", "DISCOUNT CODE3", "NETPRICE_CAD1", "NETPRICE_CAD2", "NETPRICE_CAD3", "NETPRICE_CAD4", "NETPRICE_CAD5"}),
    #"Renamed Columns7" = Table.RenameColumns(#"Reordered Columns4",{{"New Colors", "newcolors"}, {"SOURCE", "source"}}),
    #"Removed Columns3" = Table.RemoveColumns(#"Renamed Columns7",{"Packaging", "Weight Per 100 Units (Wt./100)", "Setup Coded Standard Imprint Methods (As Denoted in Bold)", "Setup margin/price code all qty", "Running Charge Addl Color coded (all Quantities)", "running charge addl Color margin/price code all qty", "Running Charge Addl location coded (all Quantities)", "running charge addl location margin/price code all qty", "DISCOUNT CODE", "qty1price coded", "qty2price coded", "qty3price coded", "qty4price coded", "qty5price coded", "GROSSPRICE_CAD1", "GROSSPRICE_CAD2", "GROSSPRICE_CAD22", "GROSSPRICE_CAD4", "GROSSPRICE_CAD5", "DISCOUNT CODE3", "ShipQty1", "ShipWeight1", "ShipLength1", "ShipWidth1", "ShipHeight1", "qty1", "qty2", "qty3", "qty4", "qty5", "NETPRICE1", "NETPRICE2", "NETPRICE3", "NETPRICE4", "NETPRICE5", "NETPRICE_CAD1", "NETPRICE_CAD2", "NETPRICE_CAD3", "NETPRICE_CAD4", "NETPRICE_CAD5"}),
    TBL = Table.Join(#"Removed Columns3","itemnumber",Images,"imageitemnumber",JoinKind.LeftOuter),
    #"Removed Columns4" = Table.RemoveColumns(TBL,{"imageitemnumber"}),
    #"Added Custom" = Table.AddColumn(#"Removed Columns4", "macpath", each List.First(Table.Column([records],"macpath"))),
    #"Replaced Errors" = Table.ReplaceErrorValues(#"Added Custom", {{"macpath", null}}),
    #"Renamed Columns8" = Table.RenameColumns(#"Replaced Errors",{{"macpath", "productassets.macpath"}}),
    #"Added Custom1" = Table.AddColumn(#"Renamed Columns8", "productassets.macpath2", each List.First(List.Skip(Table.Column([records],"macpath"),1))),
    #"Replaced Errors1" = Table.ReplaceErrorValues(#"Added Custom1", {{"productassets.macpath2", null}}),
    #"Added Custom2" = Table.AddColumn(#"Replaced Errors1", "productassets.macpath3", each List.First(List.Skip(Table.Column([records],"macpath"),2))),
    #"Replaced Errors2" = Table.ReplaceErrorValues(#"Added Custom2", {{"productassets.macpath3", null}}),
    #"Added Custom3" = Table.AddColumn(#"Replaced Errors2", "productassets.macpath4", each List.First(List.Skip(Table.Column([records],"macpath"),3))),
    #"Replaced Errors3" = Table.ReplaceErrorValues(#"Added Custom3", {{"productassets.macpath4", ""}}),
    #"Removed Columns5" = Table.RemoveColumns(#"Replaced Errors3",{"records"}),
    #"Reordered Columns5" = Table.ReorderColumns(#"Removed Columns5",{"brand", "pagefrom", "itemnumber", "category", "usstatus", "primeplus", "newcolors", "source", "exclusive", "primedesign", "description", "attributes", "colorgrouping", "decorationmethod", "size", "imprintarea", "imprintsize", "altimprintarea", "altimprintsize", "productassets.macpath", "productassets.macpath2", "productassets.macpath3", "productassets.macpath4"}),
    #"Added Custom5" = Table.AddColumn(#"Reordered Columns5", "pg", each let item = [itemnumber], pg = List.First(Table.Column(Table.SelectRows(#"Trimmed Text",each [SKU]=item),"Page")) in pg),
    #"Reordered Columns6" = Table.ReorderColumns(#"Added Custom5",{"brand", "pg", "pagefrom", "itemnumber", "category", "usstatus", "primeplus", "newcolors", "source", "exclusive", "primedesign", "description", "attributes", "colorgrouping", "decorationmethod", "size", "imprintarea", "imprintsize", "altimprintarea", "altimprintsize", "productassets.macpath", "productassets.macpath2", "productassets.macpath3", "productassets.macpath4"}),
    #"Removed Columns6" = Table.RemoveColumns(#"Reordered Columns6",{"pagefrom"}),
    #"Renamed Columns9" = Table.RenameColumns(#"Removed Columns6",{{"pg", "pagefrom"}}),
    #"Sorted Rows" = Table.Sort(#"Renamed Columns9",{{"pagefrom", Order.Ascending}}),
    #"Duplicated Column" = Table.DuplicateColumn(#"Sorted Rows", "colorgrouping", "colorgrouping - Copy"),
    #"Renamed Columns10" = Table.RenameColumns(#"Duplicated Column",{{"colorgrouping - Copy", "color"}}),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Renamed Columns10", "color", Splitter.SplitTextByDelimiter(",", QuoteStyle.None), {"color.1", "color.2", "color.3", "color.4", "color.5", "color.6", "color.7", "color.8", "color.9", "color.10", "color.11", "color.12", "color.13", "color.14", "color.15", "color.16", "color.17"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"color.1", type text}, {"color.2", type text}, {"color.3", type text}, {"color.4", type text}, {"color.5", type text}, {"color.6", type text}, {"color.7", type text}, {"color.8", type text}, {"color.9", type text}, {"color.10", type text}, {"color.11", type text}, {"color.12", type text}, {"color.13", type text}, {"color.14", type text}, {"color.15", type text}, {"color.16", type text}, {"color.17", type text}}),
    #"Renamed Columns11" = Table.RenameColumns(#"Changed Type2",{{"color.1","color_1"},{"color.2","color_2"},{"color.3","color_3"},{"color.4","color_4"},{"color.5","color_5"},{"color.6","color_6"},{"color.7","color_7"},{"color.8","color_8"},{"color.9","color_9"},{"color.10","color_10"},{"color.11","color_11"},{"color.12","color_12"},{"color.13","color_13"},{"color.14","color_14"},{"color.15","color_15"},{"color.16","color_16"},{"color.17","color_17"}}),
    #"Trimmed Text2" = Table.TransformColumns(#"Renamed Columns11",{{"color_1", Text.Trim, type text}, {"color_2", Text.Trim, type text}, {"color_3", Text.Trim, type text}, {"color_4", Text.Trim, type text}, {"color_5", Text.Trim, type text}, {"color_6", Text.Trim, type text}, {"color_7", Text.Trim, type text}, {"color_8", Text.Trim, type text}, {"color_9", Text.Trim, type text}, {"color_10", Text.Trim, type text}, {"color_11", Text.Trim, type text}, {"color_12", Text.Trim, type text}, {"color_13", Text.Trim, type text}, {"color_14", Text.Trim, type text}, {"color_15", Text.Trim, type text}, {"color_16", Text.Trim, type text}, {"color_17", Text.Trim, type text}}),
    #"Added Custom4" = Table.AddColumn(#"Trimmed Text2", "color_1_1", each let 
x = [color_1],
cnt = 1, 
rows = Table.SelectRows(SwatchesCap,each [Item Colors] = x),
seperator = List.First(Table.Column(rows,"Seperator")),
colors = List.First(Table.Column(rows,"Swatch ID")),
c = if seperator = null then colors 
else if cnt = 1 then List.First(Text.Split(colors,",")) else List.First(List.Skip(Text.Split(colors,","),1)),
d = if c = null then "default" else c
in 
d)
in
    #"Added Custom4"